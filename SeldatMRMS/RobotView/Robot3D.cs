using HelixToolkit.Wpf;
using System;
using System.Windows;
using System.Windows.Media.Media3D;
using SeldatMRMS.Management;

namespace SeldatMRMS.RobotView
{
    public class Robot3D
    {
		public class Robot3DInfo
		{
			public string version;
			public double Sx, Sy, Sz;
			public string modelPath;
			public double robotscaled;
			public Point3D Location { get; set; }
			public double m_Heading;
			public double X
			{
				get { return this.Location.X; }
				set { this.Location = new Point3D(value, this.Y, this.Z); }
			}
			public double Y
			{
				get { return this.Location.Y; }
				set { this.Location = new Point3D(this.X, value, this.Z); }
			}
			public double Z
			{
				get { return this.Location.Z; }
				set { this.Location = new Point3D(this.X, this.Y, value); }
			}
		}

        public Model3D device = null;
        public ModelVisual3D device3D;
        public ModelVisual3D contentlayer;
        private int count_add = 0;
		private TextVisual3D ptextlabel3d;
		public Robot3DInfo robot3DInfo;
		private RobotAgent robotagent;
		public delegate void Robot3DCallBack(String text);
		public Robot3DCallBack robot3DCallBack;

		public String findRobobt3Dmodel(String version)
		{
			// add more list model 3d Robot
			return GlobalVariables.getPathRobot3DModel();
		}
        public void updatePos(Point3D loc, double _angle)
        {
			  // Console.WriteLine("XX : " + loc.X);
				robot3DInfo.m_Heading = _angle;
				Transform3DGroup transforms = new Transform3DGroup();
				RotateTransform3D protate = new RotateTransform3D(new AxisAngleRotation3D(new Vector3D(0, 0, 1), robot3DInfo.m_Heading));
				transforms.Children.Add(protate);
				device3D.Transform = transforms;
				robot3DInfo.Location = new Point3D(loc.X, loc.Y, loc.Z);
				var matrix = device3D.Transform.Value;
				matrix.OffsetX = robot3DInfo.X;
				matrix.OffsetZ = robot3DInfo.Z;
				matrix.OffsetY = robot3DInfo.Y;
				device3D.Transform = new MatrixTransform3D(matrix);
				setTextlabel(string.Format("E:50% \n Sp: 0.0 \n Id: 1"), new Point3D(loc.X+4,loc.Y,15));
        }
  /*      public void updateheadingdirection(double _angle)
        {
            contentlayer.Children.Clear();
          // var axis = new Vector3D(0, 0, 1);
         //   var angle = m_Heading;
          //  var matrix = device3D.Transform.Value;
          //  matrix.Rotate(new Quaternion(axis, angle));
          //  device3D.Transform = new MatrixTransform3D(matrix);
            contentlayer.Children.Add(device3D);
        }*/

        public Robot3D(String robotname, ModelVisual3D _contentlayer)
        {
			robot3DInfo = new Robot3DInfo();
			contentlayer = _contentlayer;
			device3D = new ModelVisual3D();
			robot3DInfo.version = GlobalVariables.getPathRobot3DModel();
            device3D.SetName(robotname);
			device3D.Content = Display3d(robot3DInfo.version);
			//device3D.Content =Display3d(robot3DInfo.modelPath);
		}
		public void setCallBackforRobotAgent(RobotAgent robotagent)
		{
		//	this.robotagent = robotagent;
			//this.robotagent.updateLocationToRobot3D += updatePos;
		}
		public void setTextlabel(String txt,Point3D pos)
		{
			/*if (ptextlabel3d == null)
			{
				ptextlabel3d = new TextVisual3D();
				ptextlabel3d.UpDirection = new Vector3D(0, 0, 1);
				ptextlabel3d.TextDirection = new Vector3D(0, 1, 0);
				ptextlabel3d.Text = txt;
				ptextlabel3d.Position = pos;
				ptextlabel3d.Height = 0.8;
				ptextlabel3d.FontSize = 30;
				ptextlabel3d.Padding = new Thickness(120);
				ptextlabel3d.Background = new SolidColorBrush(Colors.White);
				ptextlabel3d.Foreground = new SolidColorBrush(Colors.Red);
				ptextlabel3d.IsDoubleSided = true;
				//contentlayer.Children.Add(ptextlabel3d);

			}
			else
			{
				ptextlabel3d.Text = txt;
				ptextlabel3d.Position = pos;
			}*/
		}
        void scanlaser()
        {
           /* var points = new PointGeometry3D();
            var col = new Color4Collection();
            var ptPos = new Vector3Collection();
            var ptIdx = new IntCollection();
            double [] ranges= {3.7966227531433105, 3.773684024810791, 3.749484062194824, 3.7273097038269043, 3.7033772468566895, 3.681121587753296, 3.6585471630096436, 3.6373305320739746, 3.6167800426483154, 3.596541166305542, 3.5741825103759766, 3.5557971000671387, 3.5349745750427246, 3.517665386199951, 3.4964237213134766, 3.4800846576690674, 3.460820436477661, 3.4413957595825195, 3.424673557281494, 3.4097793102264404, 3.393043279647827, 3.375929832458496, 3.358422040939331, 3.341780424118042, 3.3276567459106445, 3.3117799758911133, 3.2962522506713867, 3.279332399368286, 3.272040843963623, 3.30543851852417, 3.33915114402771, 3.2639944553375244, 3.167609691619873, 3.0759992599487305, 2.9925453662872314, 2.9120020866394043, 2.833292007446289, 2.7606725692749023, 2.6933090686798096, 2.6263439655303955, 2.564807415008545, 2.5083889961242676, 2.4494404792785645, 2.3933188915252686, 2.341718912124634, 2.2955162525177, 2.246037483215332, 2.2034614086151123, 2.159067392349243, 2.118511199951172, 2.080178737640381, 2.040250062942505, 2.003516435623169, 1.9689292907714844, 1.933394432067871, 1.9017361402511597, 1.868484377861023, 1.8386338949203491, 1.8095608949661255, 1.781879186630249, 1.7541841268539429, 1.7275385856628418, 1.7024743556976318, 1.684047818183899, 1.651658535003662, 1.628391146659851, 1.6073013544082642, 1.584080696105957, 1.5608127117156982, 1.5439919233322144, 1.5221079587936401, 1.5025856494903564, 1.4834495782852173, 1.464812994003296, 1.448193907737732, 1.432266354560852, 1.411677360534668, 1.395326018333435, 1.3791797161102295, 1.3649040460586548, 1.3481887578964233, 1.3351349830627441, 1.3200193643569946, 1.3077226877212524, 1.293516993522644, 1.2798652648925781, 1.2654445171356201, 1.254090666770935, 1.240380048751831, 1.2274954319000244, 1.2175755500793457, 1.207749605178833, 1.195310354232788, 1.182829737663269, 1.1727032661437988, 1.1607470512390137, 1.1523771286010742, 1.139970064163208, 1.132851481437683, 1.1206785440444946^C8e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.1350517561031018e-43, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 1.0625324586456702e+24, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 6.726232628759122e-44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 7.214336509283121e+22, 3.4934581470906724e-37, 3.4934581470906724e-37, 3.4934581470906724e-37, 3.4934581470906724e-37, 3.4934581470906724e-37, 3.4934581470906724e-37, 3.4934581470906724e-37, 3.4934581470906724e-37, 3.4934581470906724e-37, 3.4934581470906724e-37, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.939534056660998e-37, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 2.3691408205014096e+21, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21, 5.0085495284401725e-21}

            for (int y = 0; y < ranges.Length; y++)
            {
                        ptIdx.Add(ptPos.Count);
                        ptPos.Add(new Vector3(x, height - y, (-depth[y * width + x] / 3.0f) + 800));
                        col.Add(rnd.NextColor().ToColor4());
            }

            points.Positions = ptPos;
            points.Indices = ptIdx;
            points.Colors = col;*/
        }
        public void ScaledRobot(double dx,double dy ,double dz)
        {
            if(device!=null)
            {
                var group = device as Model3DGroup;

                foreach (var el in group.Children)
                {
                    var t = el as GeometryModel3D;
                    t.Transform = new ScaleTransform3D(dx,dy,dz);
                }
            }
        }
		public void AddToMap()
		{
			

		}
        public Model3D Display3d(string model)
        {
            try
            {
                ModelImporter import = new ModelImporter();
				device = import.Load(model);
                device.SetName("robot");
				// get real size of robot
				robot3DInfo.Sx = device.Bounds.SizeX; // mm to m
				robot3DInfo.Sy = device.Bounds.SizeY;
				robot3DInfo.Sz = device.Bounds.SizeZ;
                ScaledRobot(GlobalVariables.ROBOT_SCALED, GlobalVariables.ROBOT_SCALED,0);
				contentlayer.Children.Add(device3D);
			}
            catch (Exception e)
            {
                // Handle exception in case can not file 3D model
                MessageBox.Show("Exception Error : " + e.StackTrace);
            }
            return device;
        }

    }
}
